{"version":3,"file":"src_components_Youtube_js.js","mappings":";;;;;;;;;;;;;;;;;;;;AAA0B;AAE8B;AACI;AAE5D,MAAME,OAAO,GAAG,MAAM;EACpB,oBACE;IAAS,SAAS,EAAC;EAAqE,gBACtF;IACE,YAAS,cAAc;IACvB,mBAAgB,cAAc;IAC9B,SAAS,EAAC;EAA4C,iBAGnD,eACL;IACE,YAAS,SAAS;IAClB,mBAAgB,cAAc;IAC9B,kBAAe,KAAK;IACpB,SAAS,EAAC;EAAmB,gBAE7B,2DAAC,gEAAgB;IACf,MAAM,EAAC,eAAe;IACtB,EAAE,EAAC,aAAa;IAChB,KAAK,EAAC,OAAO;IACb,IAAI,EAAC,MAAM;IACX,MAAM,EAAC;EAAM,EACb,CACE,CACE;AAEd,CAAC;AAED,iEAAeA,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAmC;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,2CAAc;AAC3B,aAAa,2CAAc;AAC3B;AACA;AACA;AACA;AACA,0CAA0C,CAAE;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4CAAe;AACnB;AACA;AACA;AACA,KAAK;AACL,YAAY,gDAAmB,CAAC,2CAAc;AAC9C,QAAQ,gDAAmB,WAAW,wCAAwC;AAC9E,QAAQ,gDAAmB,CAAC,2CAAc,yBAAyB,gDAAmB,CAAC,2CAAc;AACrG,YAAY,gDAAmB,WAAW,gCAAgC;AAC1E,YAAY,gDAAmB,WAAW,mDAAmD;AAC7F,6BAA6B,gDAAmB,CAAC,2CAAc;AAC/D,gBAAgB,gDAAmB,WAAW,2DAA2D;AACzG,gBAAgB,gDAAmB,WAAW,gEAAgE;AAC9G,QAAQ,gDAAmB,cAAc,sKAAsK,2CAA2C;AAC1P;AACA,aAAa,GAAG;AAChB,YAAY,gDAAmB,aAAa,2FAA2F;AACvI,uBAAuB,gDAAmB,aAAa,oHAAoH,UAAU,iBAAiB,WAAW,4DAA4D;AAC7Q;;AAEuC;AACvC","sources":["webpack://gatsby-starter-default/./src/components/Youtube.js","webpack://gatsby-starter-default/./node_modules/react-lite-youtube-embed/dist/index.es.jsx"],"sourcesContent":["import React from \"react\";\n\nimport LiteYouTubeEmbed from \"react-lite-youtube-embed\";\nimport \"react-lite-youtube-embed/dist/LiteYouTubeEmbed.css\";\n\nconst Youtube = () => {\n  return (\n    <section className=\"flex flex-col justify-center gap-6 text-white bg-slate-900 h-screen\">\n      <h1\n        data-aos=\"fade-zoom-in\"\n        data-aos-easing=\"ease-in-back\"\n        className=\"text-lg font-bold text-center sm:text-4xl \"\n      >\n        MUST WATCH!\n      </h1>\n      <div\n        data-aos=\"fade-up\"\n        data-aos-easing=\"ease-in-back\"\n        data-aos-delay=\"200\"\n        className=\"w-[680px] mx-auto\"\n      >\n        <LiteYouTubeEmbed\n          poster=\"maxresdefault\"\n          id=\"Uo3cL4nrGOk\"\n          title=\"Funny\"\n          webp=\"true\"\n          cookie=\"true\"\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default Youtube;\n","/**\n* react-lite-youtube-embed v2.3.52\n*  https://github.com/ibrahimcesar/react-lite-youtube-embed.git\n*\n*  Copyright (c) Ibrahim Cesar < email@ibrahimcesar.com > and project contributors.\n*\n*  This source code is licensed under the MIT license found in the\n*  LICENSE file in the root directory of this source tree.\n*\n*  Author site: https://ibrahimcesar.cloud\n*/\n    import * as React from 'react';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nfunction LiteYouTubeEmbed(props) {\r\n    var _a = React.useState(false), preconnected = _a[0], setPreconnected = _a[1];\r\n    var _b = React.useState(false), iframe = _b[0], setIframe = _b[1];\r\n    var videoId = encodeURIComponent(props.id);\r\n    var videoPlaylisCovertId = typeof props.playlistCoverId === 'string' ? encodeURIComponent(props.playlistCoverId) : null;\r\n    var videoTitle = props.title;\r\n    var posterImp = props.poster || \"hqdefault\";\r\n    var paramsImp = \"&\" + props.params || \"\";\r\n    var mutedImp = props.muted ? \"&mute=1\" : \"\";\r\n    var announceWatch = props.announce || \"Watch\";\r\n    var format = props.webp ? 'webp' : 'jpg';\r\n    var vi = props.webp ? 'vi_webp' : 'vi';\r\n    var posterUrl = props.thumbnail || (!props.playlist\r\n        ? \"https://i.ytimg.com/\" + vi + \"/\" + videoId + \"/\" + posterImp + \".\" + format\r\n        : \"https://i.ytimg.com/\" + vi + \"/\" + videoPlaylisCovertId + \"/\" + posterImp + \".\" + format);\r\n    var ytUrl = props.noCookie\r\n        ? \"https://www.youtube-nocookie.com\"\r\n        : \"https://www.youtube.com\";\r\n    ytUrl = props.cookie\r\n        ? \"https://www.youtube.com\"\r\n        : \"https://www.youtube-nocookie.com\";\r\n    var iframeSrc = !props.playlist\r\n        ? ytUrl + \"/embed/\" + videoId + \"?autoplay=1&state=1\" + mutedImp + paramsImp\r\n        : ytUrl + \"/embed/videoseries?autoplay=1\" + mutedImp + \"&list=\" + videoId + paramsImp;\r\n    var activatedClassImp = props.activatedClass || \"lyt-activated\";\r\n    var adNetworkImp = props.adNetwork || false;\r\n    var aspectHeight = props.aspectHeight || 9;\r\n    var aspectWidth = props.aspectWidth || 16;\r\n    var iframeClassImp = props.iframeClass || \"\";\r\n    var playerClassImp = props.playerClass || \"lty-playbtn\";\r\n    var wrapperClassImp = props.wrapperClass || \"yt-lite\";\r\n    var onIframeAdded = props.onIframeAdded || function () { };\r\n    var rel = props.rel ? 'prefetch' : 'preload';\r\n    var warmConnections = function () {\r\n        if (preconnected)\r\n            return;\r\n        setPreconnected(true);\r\n    };\r\n    var addIframe = function () {\r\n        if (iframe)\r\n            return;\r\n        setIframe(true);\r\n    };\r\n    React.useEffect(function () {\r\n        if (iframe) {\r\n            onIframeAdded();\r\n        }\r\n    }, [iframe]);\r\n    return (React.createElement(React.Fragment, null,\r\n        React.createElement(\"link\", { rel: rel, href: posterUrl, as: \"image\" }),\r\n        React.createElement(React.Fragment, null, preconnected && (React.createElement(React.Fragment, null,\r\n            React.createElement(\"link\", { rel: \"preconnect\", href: ytUrl }),\r\n            React.createElement(\"link\", { rel: \"preconnect\", href: \"https://www.google.com\" }),\r\n            adNetworkImp && (React.createElement(React.Fragment, null,\r\n                React.createElement(\"link\", { rel: \"preconnect\", href: \"https://static.doubleclick.net\" }),\r\n                React.createElement(\"link\", { rel: \"preconnect\", href: \"https://googleads.g.doubleclick.net\" })))))),\r\n        React.createElement(\"article\", { onPointerOver: warmConnections, onClick: addIframe, className: wrapperClassImp + \" \" + (iframe ? activatedClassImp : \"\"), \"data-title\": videoTitle, style: __assign({ backgroundImage: \"url(\" + posterUrl + \")\" }, {\r\n                '--aspect-ratio': (aspectHeight / aspectWidth) * 100 + \"%\",\r\n            }) },\r\n            React.createElement(\"button\", { type: \"button\", className: playerClassImp, \"aria-label\": announceWatch + \" \" + videoTitle }),\r\n            iframe && (React.createElement(\"iframe\", { className: iframeClassImp, title: videoTitle, width: \"560\", height: \"315\", frameBorder: \"0\", allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\", allowFullScreen: true, src: iframeSrc })))));\r\n}\n\nexport { LiteYouTubeEmbed as default };\n//# sourceMappingURL=index.es.jsx.map\n"],"names":["React","LiteYouTubeEmbed","Youtube"],"sourceRoot":""}